# -*- coding: utf-8 -*-
"""naive-bayes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OinhwktLwUzZ6TkiTSlinYBDvBL_UGp0
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, confusion_matrix

dataset = pd.read_csv("naive_bayes_dataset.csv")

X = dataset.iloc[:, :-1]
y = dataset.iloc[:, -1]

X_encoded = X.apply(LabelEncoder().fit_transform)
y_encoded = LabelEncoder().fit_transform(y)

X_encoded = X_encoded.iloc[:, [0, 1]]

X_train, X_test, y_train, y_test = train_test_split(X_encoded.values, y_encoded, test_size=0.25, random_state=0)


classifier = GaussianNB()
classifier.fit(X_train, y_train)


y_pred = classifier.predict(X_test)


print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))


X_set, y_set = X_train, y_train
X1, X2 = np.meshgrid(np.arange(start=X_set[:, 0].min() - 1, stop=X_set[:, 0].max() + 1, step=0.01),
                     np.arange(start=X_set[:, 1].min() - 1, stop=X_set[:, 1].max() + 1, step=0.01))
plt.contourf(X1, X2, classifier.predict(np.c_[X1.ravel(), X2.ravel()]).reshape(X1.shape),
             alpha=0.75, cmap=ListedColormap(['#FA8072', '#1E90FF']))
plt.xlim(X1.min(), X1.max())
plt.ylim(X2.min(), X2.max())
for i, j in enumerate(np.unique(y_set)):
    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],
                color=ListedColormap(['#FA8072', '#1E90FF'])(i), label=j)
plt.title('Naive Bayes (Training set)')
plt.xlabel('Age (encoded)')
plt.ylabel('Income (encoded)')
plt.legend()
plt.show()


X_set, y_set = X_test, y_test
X1, X2 = np.meshgrid(np.arange(start=X_set[:, 0].min() - 1, stop=X_set[:, 0].max() + 1, step=0.01),
                     np.arange(start=X_set[:, 1].min() - 1, stop=X_set[:, 1].max() + 1, step=0.01))
plt.contourf(X1, X2, classifier.predict(np.c_[X1.ravel(), X2.ravel()]).reshape(X1.shape),
             alpha=0.75, cmap=ListedColormap(['#FA8072', '#1E90FF']))
plt.xlim(X1.min(), X1.max())
plt.ylim(X2.min(), X2.max())

colors = ListedColormap(['#FA8072', '#1E90FF'])

for i, j in enumerate(np.unique(y_set)):
    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],
                color=colors(i), edgecolor='black', s=70, label=f'Class {j}')

plt.title('Naive Bayes (Test set)')
plt.xlabel('Age (encoded)')
plt.ylabel('Income (encoded)')
plt.legend()
plt.show()